networks:
  kong-net:
volumes:
  kong-datastore:
services:

  kong-migration:
    # build:
    #   context: my-kong-app
    image: edoaurahman/kong:3.5.0-oidc
    command: kong migrations bootstrap
    networks:
      - kong-net
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PORT: 5432
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE}

  kong-migration-up:
    # build:
    #   context: my-kong-app
    image: edoaurahman/kong:3.5.0-oidc
    command: kong migrations up && kong migrations finish
    networks:
      - kong-net
    depends_on:
      - kong-db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PORT: 5432
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE}
  kong-db:
    image: postgres:14.15-alpine3.21
    volumes:
      - kong-datastore:/var/lib/postgresql/data
    networks:
      - kong-net
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${KONG_PG_USER}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD}
      POSTGRES_DB: ${KONG_PG_DATABASE}

  kong:
    # build:
    #   context: my-kong-app
    image: edoaurahman/kong:3.5.0-oidc
    container_name: kong
    depends_on:
      - kong-db
    networks:
      - kong-net
    ports:
      - "8000:8000" # Listener
      - "8001:8001" # Admin API
      - "8443:8443" # Listener  (SSL)
      - "8444:8444" # Admin API (SSL)
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PORT: 5432
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    restart: always

  konga:
    image: pantsel/konga:latest
    networks:
      - kong-net
    ports:
      - "1337:1337"
    environment:
      NODE_ENV: production
    restart: always
